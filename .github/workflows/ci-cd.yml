name: CI
on:
  push:
    branches:
      - master

jobs:
  verify-builds:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.DB_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Étape 1 : Cloner le dépôt
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape 2 : Installer pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: "8"

      # Étape 3 : Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: ./front/pnpm-lock.yaml

      # Étape 4 : Installer les dépendances frontend
      - name: Install frontend dependencies
        working-directory: ./front
        run: |
          pnpm install

      # Étape 5 : Build du frontend
      - name: Build frontend
        working-directory: ./front
        run: |
          pnpm build

      # Étape 6 : Installer les dépendances backend
      - name: Install backend dependencies
        working-directory: ./back
        run: |
          npm install

      # Étape 7 : Vérification backend
      - name: Verify backend
        working-directory: ./back
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: test
        run: |
          npm test
